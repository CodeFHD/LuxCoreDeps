# SPDX-FileCopyrightText: 2024 Howetuft
#
# SPDX-License-Identifier: Apache-2.0

name: LuxCore Python wheels

on: [push, pull_request]


jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        #python-minor: ['8', '9', '10', '11', '12']
        python-minor: ['8']
        # os: [ubuntu-latest, windows-latest, macos-13, macos-14]
        os: [windows-latest]
    env:
      GH_TOKEN: ${{ github.token }}
      SCCACHE_GHA_ENABLED: on
      SCCACHE_DIRECT: on
      CMAKE_MESSAGE_LOG_LEVEL: VERBOSE

    steps:

      - name: Checkout repository and submodule(s)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 1

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.${{ matrix.python-minor }}'

      #- name: Windows - Prepare Python deps
        #if: ${{ runner.os }} == "Windows"
        #uses: ./.github/actions/windows-python-deps
        #with:
          #job-id: ${{ matrix.os }}-${{ matrix.python-minor }}

      - name: Windows - Set up build system
        if: ${{ runner.os }} == "Windows"
        uses: ./.github/actions/windows-build-system
        with:
          job-id: ${{ matrix.os }}-${{ matrix.python-minor }}

      - name: Windows - Clean source tree
        if: ${{ runner.os }} == "Windows"
        uses: ./.github/actions/windows-clean-tree

      # Build wheel
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.1
        env:
          SCCACHE_GHA_ENABLED: "true"
          CIBW_BUILD_FRONTEND: build
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BUILD: cp3${{ matrix.python-minor }}-*
          CIBW_SKIP: "*musllinux*"
          CIBW_ARCHS: auto64
          CIBW_ENVIRONMENT_PASS_LINUX: |
            SCCACHE_GHA_ENABLED
            SCCACHE_DIRECT
            ACTIONS_CACHE_URL
            ACTIONS_RUNTIME_TOKEN
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          CIBW_BEFORE_ALL_LINUX: source /project/scripts/before_all_linux.sh
          CIBW_BEFORE_ALL_WINDOWS: pip install "numpy < 2.0"
          CIBW_BEFORE_BUILD_WINDOWS: bash.exe %GITHUB_WORKSPACE%/scripts/before_build_windows.sh
          CIBW_ENVIRONMENT_WINDOWS: >-
            SCCACHE_C_CUSTOM_CACHE_BUSTER='3.${{ matrix.python-minor }}'
            SCCACHE_LOG=debug
            LIBDIR='${{ env.Python_ROOT_DIR }}'
            SKBUILD_CMAKE_ARGS='--preset=conan-release;-G Ninja;--log-level=VERBOSE'
            PYTHON_V=''
            SPDLOG_FMT_EXTERNAL=on
        with:
            package-dir: .
            output-dir: wheelhouse
            config-file: "{package}/pyproject.toml"


      #- name: Setup tmate session
        #if: ${{ failure() }}
        #uses: mxschmitt/action-tmate@v3

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
