# SPDX-FileCopyrightText: 2025 Howetuft
#
#
# SPDX-License-Identifier: Apache-2.0


# Check that dependencies are suitable for future use


name: LuxCore Dependency Checker

on:
  workflow_dispatch:
  push:

jobs:
  call-build-deps:
    uses: ./.github/workflows/build.yml

  check-deps:
    name: Check dependencies
    runs-on: ${{ matrix.os }}
    needs: [call-build-deps]
    strategy:
      fail-fast: False
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]
    env:
      SCCACHE_GHA_ENABLED: "true"
    steps:
      - name: Checkout LuxCore repository
        uses: actions/checkout@v4
        with:
          repository: 'LuxCoreRender/LuxCore'
          ref: 'for_v2.10'

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: luxcore-deps-${{ matrix.os }}
          path: ${{ github.workspace }}/dist
          merge-multiple: false

      - name: Display structure of downloaded files
        shell: bash
        run: ls -R $GITHUB_WORKSPACE/dist

      - name: Install Conan
        run: pip install conan

      - name: Update apt
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y

      - name: Install sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.7

      - name: Set sccache
        run: |
          echo "CMAKE_C_COMPILER_LAUNCHER=sccache" >> $GITHUB_ENV
          echo "CMAKE_CXX_COMPILER_LAUNCHER=sccache" >> $GITHUB_ENV
     
      - name: Set Conan parameters
        shell: bash
        run: |
            _build_type=$(echo "${{ env.BUILD_TYPE }}" | tr '[:upper:]' '[:lower:]')
            _conan_home="${{ env.WORKSPACE }}/.conan2"
            echo "CONAN_PRESET=conan-${_build_type}" >> $GITHUB_ENV
            echo "CONAN_HOME=${_conan_home}" >> $GITHUB_ENV

      - name: Prepare deps
        shell: bash
        run: |
          _path='${{ github.workspace }}/dist/luxcore-deps-${{ matrix.os }}/conan-cache-save.tgz'
          echo "Path to downloaded cache: ${_path}"
          python cmake/make_deps.py -l "${_path}" -v

      - name: Build LuxCore
        run: make
