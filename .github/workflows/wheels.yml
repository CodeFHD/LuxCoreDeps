name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-minor: ['7', '8', '9', '10', '11', '12']
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4

      # Used to host cibuildwheel
      - uses: actions/setup-python@v5

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.19.2

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        env:
          CIBW_BUILD: "cp38-*"  # TODO
          CIBW_BEFORE_ALL_LINUX: |
            _pypath=$(python -c "from sysconfig import get_path; print(get_path('include'))")
            ls -R /opt/python/cp38-cp38 | grep cmake
            echo $_pypath
            dnf -y install wget almalinux-release-devel
            dnf config-manager --set-enabled powertools

            # Embree
            EMBREE_VERSION=3.8.0  # Last version with rpm (Apr 7, 2020)
            if wget -q "https://github.com/RenderKit/embree/releases/download/v${EMBREE_VERSION}/embree-${EMBREE_VERSION}.x86_64.rpm.tar.gz"
            then
              tar -xvzf embree-${EMBREE_VERSION}.x86_64.rpm.tar.gz -C .
              dnf -y localinstall embree3-devel-${EMBREE_VERSION}-1.noarch.rpm
              dnf -y localinstall embree3-lib-${EMBREE_VERSION}-1.x86_64.rpm
            else
              echo "Failed"
            fi

            # OIDN
            OIDN_VERSION=1.3.0  # See release-notes
            if wget -q "https://github.com/RenderKit/oidn/releases/download/v${OIDN_VERSION}/oidn-${OIDN_VERSION}.x86_64.linux.tar.gz"
            then
              export OIDN_DIR=oidn-${OIDN_VERSION}.x86_64.linux
              tar -xvzf oidn-${OIDN_VERSION}.x86_64.linux.tar.gz -C .
              cp ${OIDN_DIR}/bin/* /usr/bin
              mkdir /usr/share/doc/OpenImageDenoise
              cp ${OIDN_DIR}/doc/* /usr/share/doc/OpenImageDenoise
              cp -r ${OIDN_DIR}/include/OpenImageDenoise /usr/include
              cp -r ${OIDN_DIR}/lib/* /usr/lib
            else
              echo "Failed"
            fi
            dnf -y install epel-release && /usr/bin/crb enable
            dnf -y install libtiff-devel libjpeg-devel libpng-devel gtk3-devel OpenImageIO-devel OpenEXR-devel boost-static flex tbb-devel blosc-devel blosc platform-python-devel

          CIBW_BUILD_FRONTEND: "build"
          CIBW_BUILD_VERBOSITY: 1
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux_2_28"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
